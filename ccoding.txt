Question 2
#include <stdio.h>

int main() {
    int numbers[5], i, j, temp, max, min;

    // Get 5 numbers from the user
    printf("Enter 5 numbers:\n");
    for (i = 0; i < 5; i++) {
        scanf("%d", &numbers[i]);
    }

    // Initialize max and min
    max = numbers[0];  // Assuming the first element is the maximum initially
    min = numbers[0];  // Assuming the first element is the minimum initially

    // Sort the numbers in descending order using bubble sort
    for (i = 0; i < 4; i++) {
        for (j = 0; j < 4 - i; j++) {
            if (numbers[j] < numbers[j + 1]) {
                temp = numbers[j];
                numbers[j] = numbers[j + 1];
                numbers[j + 1] = temp;

                // Update max and min while sorting
                if (numbers[j] > max) {
                    max = numbers[j];
                }
                if (numbers[j + 1] < min) {
                    min = numbers[j + 1];
                }
            }
        }
    }

    // Print the numbers in descending order with new lines
    printf("Numbers in descending order:\n");
    for (i = 0; i < 5; i++) {
        printf("%d\n", numbers[i]);
    }

    // Print the maximum and minimum numbers
    printf("Maximum number: %d\n", max);
    printf("Minimum number: %d\n", min);

    return 0;
}

Question 3
#include <stdio.h>
#include <string.h>

int main() {
    char name[5][100];
    int i, j;
    char temp;

    printf("Enter 5 names: ");
    for (i = 0; i < 5; i++) {
        scanf("%s", name[i]);
    }

    // Reverse each name
    for (i = 0; i < 5; i++) {
        int len = strlen(name[i]);
        for (j = 0; j < len / 2; j++) {
            temp = name[i][j];
            name[i][j] = name[i][len - j - 1];
            name[i][len - j - 1] = temp;
        }
    }

    // Display reversed names
    printf("Reversed names: ");
    for (i = 0; i < 5; i++) {
        printf("%s\n", name[i]);
    }

    return 0;
}


Questions 4
#include <stdio.h>
#include <string.h>

// Function to check if two words are the same
int are_words_same(char *word1, char *word2) {
    int len1 = strlen(word1);
    int len2 = strlen(word2);

    if (len1 != len2) {
        return 0; // Words are not the same length, so they are not the same
    }

    for (int i = 0; i < len1; i++) {
        if (word1[i] != word2[i]) {
            return 0; // Words are not the same
        }
    }

    return 1; // Words are the same
}

int main() {
    char word1[100];
    char word2[100];

    printf("Enter the first word: ");
    scanf("%s", word1);

    printf("Enter the second word: ");
    scanf("%s", word2);

    if (are_words_same(word1, word2)) {
        printf("The words are the same.\n");
    } else {
        printf("The words are not the same.\n");
    }

    return 0;
}

Questions 5
#include <stdio.h>
#include <string.h>

int main() {
    char str[100];
    char *ptr1, *ptr2;

    printf("Enter a string: ");
    scanf("%s", str);

    ptr1 = str;
    ptr2 = str + strlen(str) - 1;

    while (ptr1 < ptr2) {
        if (*ptr1 != *ptr2) {
            printf("%s is not a palindrome\n", str);
            return 0;
        }
        ptr1++;
        ptr2--;
    }

    printf("%s is a palindrome\n", str);

    return 0;
}

Question 6

#include <stdio.h>

struct salary {
    float basic;
    float hra;
    float da;
    float insurance;
    float tax;
};

int main() {
    struct salary s;

    printf("Enter basic salary: ");
    scanf("%f", &s.basic);

    printf("Enter HRA (as a percentage): ");
    scanf("%f", &s.hra);
    s.hra = (s.hra / 100) * s.basic;

    printf("Enter DA (as a percentage): ");
    scanf("%f", &s.da);
    s.da = (s.da / 100) * s.basic;

    printf("Enter insurance: ");
    scanf("%f", &s.insurance);

    printf("Enter tax (as a percentage): ");
    scanf("%f", &s.tax);
    s.tax = (s.tax / 100) * s.basic;

    float gross = s.basic + s.hra + s.da + s.insurance;
    float net = gross - s.tax;

    printf("Gross salary: %.2f\n", gross);
    printf("Net salary: %.2f\n", net);

    return 0;
}

Question 8

#include <stdio.h>
#include <string.h>

int main() {
    char name[100];
    char *ptr;

    printf("Enter your name in lowercase: ");
    scanf("%s", name);

    ptr = name;

    while (*ptr != '\0') {
        if (*ptr >= 'a' && *ptr <= 'z') {
            *ptr = *ptr - 32; // Convert to uppercase
        }
        ptr++;
    }

    printf("Your name in uppercase: %s\n", name);

    return 0;
}

Question 9
#include <stdio.h>

int main() {
    char sentence[100];
    int count = 0;
    int i;

    printf("Enter a sentence: ");
    scanf("%[^\n]s", sentence);

    for (i = 0; sentence[i] != '\0'; i++) {
        if (sentence[i] == ' ' || sentence[i] == '\t' || sentence[i] == '\n') {
            count++;
        }
    }

    if (sentence[i - 1] != ' ' && sentence[i - 1] != '\t' && sentence[i - 1] != '\n') {
        count++;
    }

    printf("Number of words: %d\n", count);

    return 0;
}


Questions 10



#include <stdio.h>
#include <string.h>
#include<ctype.h>

#define MAX 100

int main() {
    FILE *fp;
    char filename[MAX];
    char ch;
    int count = 0;

    printf("Enter the filename: ");
    scanf("%s", filename);

    fp = fopen(filename, "r");
    if (fp == NULL) {
        printf("Error opening file\n");
        return 1;
    }

    while ((ch = fgetc(fp)) != EOF) {
        ch = tolower(ch); // Convert to lowercase
        if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {
            count++;
        }
    }

    fclose(fp);

    printf("Number of vowels: %d\n", count);

    return 0;
}




